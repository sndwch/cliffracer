# Zabbix Agent configuration for NATS services monitoring

# Custom user parameters for NATS services
UserParameter=nats.service.status[*],curl -s http://$1:$2/health | jq -r '.status' 2>/dev/null || echo "unknown"
UserParameter=nats.service.connections[*],curl -s http://$1:$2/health | jq -r '.nats_connected' 2>/dev/null || echo "false"
UserParameter=nats.service.rpc_count[*],curl -s http://$1:$2/info | jq '.rpc_methods | length' 2>/dev/null || echo "0"
UserParameter=nats.service.event_count[*],curl -s http://$1:$2/info | jq '.event_handlers | length' 2>/dev/null || echo "0"

# NATS server monitoring
UserParameter=nats.server.connections,curl -s http://nats:8222/connz | jq '.num_connections' 2>/dev/null || echo "0"
UserParameter=nats.server.messages.in,curl -s http://nats:8222/varz | jq '.in_msgs' 2>/dev/null || echo "0"
UserParameter=nats.server.messages.out,curl -s http://nats:8222/varz | jq '.out_msgs' 2>/dev/null || echo "0"
UserParameter=nats.server.bytes.in,curl -s http://nats:8222/varz | jq '.in_bytes' 2>/dev/null || echo "0"
UserParameter=nats.server.bytes.out,curl -s http://nats:8222/varz | jq '.out_bytes' 2>/dev/null || echo "0"
UserParameter=nats.server.uptime,curl -s http://nats:8222/varz | jq -r '.uptime' 2>/dev/null || echo "0"

# Container monitoring
UserParameter=container.status[*],docker inspect $1 --format='{{.State.Status}}' 2>/dev/null || echo "unknown"
UserParameter=container.restarts[*],docker inspect $1 --format='{{.RestartCount}}' 2>/dev/null || echo "0"
UserParameter=container.memory[*],docker stats $1 --no-stream --format "{{.MemUsage}}" 2>/dev/null | cut -d'/' -f1 | sed 's/[^0-9.]//g' || echo "0"
UserParameter=container.cpu[*],docker stats $1 --no-stream --format "{{.CPUPerc}}" 2>/dev/null | sed 's/%//g' || echo "0"

# Log monitoring
UserParameter=log.errors[*],grep -c "ERROR" /app/logs/$1.log 2>/dev/null || echo "0"
UserParameter=log.warnings[*],grep -c "WARNING" /app/logs/$1.log 2>/dev/null || echo "0"
UserParameter=log.size[*],stat -c%s /app/logs/$1.log 2>/dev/null || echo "0"

# Custom metrics from services
UserParameter=service.metrics[*],curl -s http://$1:$2/metrics/$3 2>/dev/null || echo "0"