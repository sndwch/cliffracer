# Cliffracer Development Environment Configuration for .zshrc
# Add these to your ~/.zshrc file for optimal Cliffracer development

# =============================================================================
# Python Environment (pyenv + Python 3.13.2)
# =============================================================================

# Pyenv initialization
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# Set Python version for Cliffracer development
export CLIFFRACER_PYTHON_VERSION="3.13.2"

# =============================================================================
# UV Package Manager (Fast Python dependency management)
# =============================================================================

# Install UV if not present
if ! command -v uv &> /dev/null; then
    echo "üì¶ Installing UV package manager..."
    curl -LsSf https://astral.sh/uv/install.sh | sh
fi

# Add UV to PATH
export PATH="$HOME/.cargo/bin:$PATH"

# UV configuration for faster installs
export UV_CACHE_DIR="$HOME/.cache/uv"
export UV_PYTHON_PREFERENCE="only-managed"

# =============================================================================
# Docker (Rancher Desktop)
# =============================================================================

# Rancher Desktop Docker
export PATH="$HOME/.rd/bin:$PATH"

# Docker configuration
export DOCKER_DEFAULT_PLATFORM="linux/amd64"
export COMPOSE_DOCKER_CLI_BUILD=1
export DOCKER_BUILDKIT=1

# =============================================================================
# Cliffracer Development Aliases & Functions
# =============================================================================

# Quick navigation
alias cliff="cd $HOME/dev/microservices"
alias cdsrc="cd $HOME/dev/microservices/src/cliffracer"
alias cdex="cd $HOME/dev/microservices/examples"
alias cddep="cd $HOME/dev/microservices/deployment"

# Python development
alias py="python3"
alias pip="python3 -m pip"

# UV shortcuts
alias uvs="uv sync"
alias uvr="uv run"
alias uva="uv add"
alias uvd="uv remove"
alias uvi="uv init"

# Git shortcuts for Cliffracer
alias gs="git status"
alias gd="git diff"
alias gl="git log --oneline -10"
alias gp="git push"
alias gc="git commit -m"

# Docker shortcuts
alias dc="docker-compose"
alias dcu="docker-compose up -d"
alias dcd="docker-compose down"
alias dcl="docker-compose logs -f"
alias dps="docker ps"

# =============================================================================
# Cliffracer Specific Environment Variables
# =============================================================================

# Cliffracer project paths
export CLIFFRACER_ROOT="$HOME/dev/microservices"
export CLIFFRACER_SRC="$CLIFFRACER_ROOT/src"
export CLIFFRACER_EXAMPLES="$CLIFFRACER_ROOT/examples"

# Python path for development
export PYTHONPATH="$CLIFFRACER_SRC:$PYTHONPATH"

# NATS configuration
export NATS_URL="nats://localhost:4222"
export NATS_MONITORING_URL="http://localhost:8222"

# Monitoring configuration
export ZABBIX_URL="http://localhost:8080"
export GRAFANA_URL="http://localhost:3000"
export METRICS_EXPORTER_URL="http://localhost:9090"

# Development configuration
export CLIFFRACER_ENV="development"
export CLIFFRACER_LOG_LEVEL="INFO"
export CLIFFRACER_DEBUG="true"

# =============================================================================
# Cliffracer Development Functions
# =============================================================================

# Setup Cliffracer development environment
cliffracer_setup() {
    echo "üöÄ Setting up Cliffracer development environment..."
    
    # Navigate to project
    cd "$CLIFFRACER_ROOT" || return 1
    
    # Set Python version
    pyenv local "$CLIFFRACER_PYTHON_VERSION"
    
    # Install dependencies
    echo "üì¶ Installing dependencies with UV..."
    uv sync --extra all
    
    # Verify installation
    echo "‚úÖ Testing imports..."
    if uv run python -c "from cliffracer import NATSService; print('‚úÖ Cliffracer imports working!')"; then
        echo "üéâ Cliffracer development environment ready!"
    else
        echo "‚ùå Import test failed. Check your setup."
        return 1
    fi
}

# Run Cliffracer tests
cliffracer_test() {
    echo "üß™ Running Cliffracer tests..."
    cd "$CLIFFRACER_ROOT" || return 1
    
    # Run specific test types
    case "${1:-all}" in
        "unit")
            uv run pytest tests/unit/ -v
            ;;
        "integration") 
            uv run pytest tests/integration/ -v
            ;;
        "e2e")
            uv run pytest tests/e2e/ -v
            ;;
        "all"|*)
            uv run pytest tests/ -v
            ;;
    esac
}

# Start Cliffracer services
cliffracer_start() {
    echo "üöÄ Starting Cliffracer services..."
    cd "$CLIFFRACER_ROOT" || return 1
    
    case "${1:-simple}" in
        "full")
            echo "Starting full stack with monitoring..."
            docker-compose -f deployment/docker/docker-compose-live-demo.yml up -d
            echo "üìä Services starting..."
            echo "   - NATS: http://localhost:8222"
            echo "   - Zabbix: http://localhost:8080 (admin/zabbix)"
            echo "   - Grafana: http://localhost:3000 (admin/admin)"
            ;;
        "nats")
            echo "Starting NATS only..."
            docker-compose -f deployment/docker/docker-compose-nats.yml up -d
            ;;
        "simple"|*)
            echo "Starting simple demo..."
            uv run python examples/ecommerce/demo_simple.py
            ;;
    esac
}

# Stop Cliffracer services
cliffracer_stop() {
    echo "üõë Stopping Cliffracer services..."
    cd "$CLIFFRACER_ROOT" || return 1
    
    # Stop all Docker services
    docker-compose -f deployment/docker/docker-compose-live-demo.yml down 2>/dev/null || true
    docker-compose -f deployment/docker/docker-compose-nats.yml down 2>/dev/null || true
    
    # Kill any Python processes
    pkill -f "python.*cliffracer" 2>/dev/null || true
    pkill -f "python.*demo_simple" 2>/dev/null || true
    
    echo "‚úÖ All services stopped"
}

# Quick lint and format
cliffracer_lint() {
    echo "üîç Linting Cliffracer code..."
    cd "$CLIFFRACER_ROOT" || return 1
    
    echo "Running ruff..."
    uv run ruff check src/ examples/ tests/
    
    echo "Running mypy..."
    uv run mypy src/ --ignore-missing-imports
}

# Quick format code
cliffracer_format() {
    echo "üé® Formatting Cliffracer code..."
    cd "$CLIFFRACER_ROOT" || return 1
    
    uv run ruff format src/ examples/ tests/
    echo "‚úÖ Code formatted"
}

# Show Cliffracer development info
cliffracer_info() {
    echo "üìã Cliffracer Development Environment Info"
    echo "=========================================="
    echo "üêç Python: $(python3 --version)"
    echo "üì¶ UV: $(uv --version 2>/dev/null || echo 'Not installed')"
    echo "üê≥ Docker: $(docker --version)"
    echo "üìÅ Project: $CLIFFRACER_ROOT"
    echo ""
    echo "üîó Quick Commands:"
    echo "   cliffracer_setup    - Setup development environment"
    echo "   cliffracer_start    - Start services (simple/nats/full)"
    echo "   cliffracer_stop     - Stop all services"
    echo "   cliffracer_test     - Run tests (unit/integration/e2e/all)"
    echo "   cliffracer_lint     - Lint code"
    echo "   cliffracer_format   - Format code"
    echo ""
    echo "üìä Service URLs:"
    echo "   NATS Monitor: $NATS_MONITORING_URL"
    echo "   Zabbix: $ZABBIX_URL"
    echo "   Grafana: $GRAFANA_URL"
    echo "   Metrics: $METRICS_EXPORTER_URL"
}

# =============================================================================
# Development Quality of Life
# =============================================================================

# Better history
export HISTSIZE=10000
export SAVEHIST=10000
setopt SHARE_HISTORY
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS

# Auto cd to project if in development mode
if [[ "$PWD" == "$HOME" && -d "$HOME/dev/microservices" ]]; then
    echo "üöÄ Welcome to Cliffracer development!"
    echo "üí° Run 'cliffracer_info' for quick commands"
fi

# =============================================================================
# End of Cliffracer Configuration
# =============================================================================

echo "‚úÖ Cliffracer development environment loaded!"
echo "üí° Run 'cliffracer_info' to see available commands"